"""Test migration

Revision ID: d68c754f8b16
Revises: 
Create Date: 2024-07-11 19:40:11.067342

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd68c754f8b16'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    if not op.get_bind().dialect.has_table(op.get_bind(), 'blocked_tokens'):
        op.create_table('blocked_tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
        op.create_table('shops',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('number', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('number')
    )
        op.create_table('managers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('shop_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
        op.create_table('attendants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('manager_id', sa.UUID(), nullable=False),
    sa.Column('shop_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['manager_id'], ['managers.id'], ),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
        op.create_table('inventories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('batch_number', sa.String(), nullable=False),
    sa.Column('order_quantity', sa.Integer(), nullable=False),
    sa.Column('reorder_level', sa.Integer(), nullable=True),
    sa.Column('cost_price', sa.Float(), nullable=False),
    sa.Column('selling_price', sa.Float(), nullable=False),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('supplier_name', sa.String(), nullable=True),
    sa.Column('supplier_contact', sa.String(), nullable=True),
    sa.Column('shop_id', sa.UUID(), nullable=False),
    sa.Column('attendant_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['attendant_id'], ['attendants.id'], ),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
        op.create_table('transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('transaction_date', sa.DateTime(), nullable=False),
    sa.Column('product_list', postgresql.JSON(astext_type=Text()), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('cash_in', sa.Float(), nullable=False),
    sa.Column('payment_type', sa.Enum('cash', 'mobile money', name='payment_type'), nullable=False),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('shop_id', sa.UUID(), nullable=False),
    sa.Column('inventory_id', sa.UUID(), nullable=False),
    sa.Column('attendant_id', sa.UUID(), nullable=False),
    sa.Column('completed_by', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['attendant_id'], ['attendants.id'], ),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventories.id'], ),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('inventories')
    op.drop_table('attendants')
    op.drop_table('managers')
    op.drop_table('shops')
    op.drop_table('blocked_tokens')
    # ### end Alembic commands ###
